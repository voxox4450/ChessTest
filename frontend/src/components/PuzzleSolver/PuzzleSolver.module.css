@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&family=Roboto:wght@400;500;700&display=swap');

/* No need to redefine these variables since they're imported from Theme.css */
/* Instead, just use the App's theme variables */

html,
body {
  margin: 0;
  padding: 0;
  font-family: 'Montserrat', 'Roboto', sans-serif;
  background: var(--background-gradient);
  min-height: 100vh;
  color: var(--text-primary);
  line-height: 1.6;
}

.PuzzleSolver {
  max-width: 1000px;
  width: 90%;
  background: var(--surface-primary);
  border-radius: var(--radius-xl);
  border: 1px solid var(--border-color);
  box-shadow: var(--shadow);
  margin: var(--spacing-lg) auto;
  padding: var(--spacing-lg);
  overflow: hidden;
  transition: var(--transition-all);
  text-align: center;
  position: relative;
  z-index: 1;
}

.PuzzleSolver::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image:
      url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M30 30L30 0L0 0L0 30L30 30L60 30L60 0L30 0L30 30L30 60L60 60L60 30L30 30L0 30L0 60L30 60L30 30Z' fill='currentColor' fill-opacity='0.03'/%3E%3C/svg%3E");
  background-size: 80px 80px;
  z-index: -1;
  opacity: 0.4;
  pointer-events: none;
}

.welcome h1 {
  font-size: 2.5rem;
  margin-bottom: var(--spacing-md);
  color: var(--text-primary);
  font-weight: 700;
  background: linear-gradient(135deg, var(--primary-color) 0%, var(--accent-color) 100%);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
}

.welcome p {
  font-size: 1.2rem;
  color: var(--text-secondary);
  max-width: 800px;
  margin: 0 auto;
}

.header {
  background: var(--surface-secondary);
  backdrop-filter: var(--blur-intensity);
  border-radius: var(--radius-lg);
  padding: var(--spacing-md);
  margin: 0;
  border-left: 4px solid var(--primary-color);
  text-align: left;
  box-shadow: var(--shadow);
  transition: var(--transition-all);
  position: relative;
  overflow: hidden;
  display: flex;
  align-items: flex-start;
  flex-wrap: wrap;
  font-size: 0.9rem;
}

.header h2 {
  font-size: 1.8rem;
  margin: 0;
  color: var(--text-primary);
  font-weight: 600;
  position: relative;
}

.header::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url("data:image/svg+xml,%3Csvg width='100' height='20' xmlns='http://www.w3.org/2000/svg'%3E%3Ctext x='10' y='15' font-family='monospace' font-size='12' opacity='0.07'%3Ee4 e5 Nf3 Nc6%3C/text%3E%3C/svg%3E");
  background-repeat: repeat;
  opacity: 0.1;
  z-index: 0;
}

.boardContainer {
  display: flex;
  align-items: flex-start;
  justify-content: center;
  margin: var(--spacing-md) auto var(--spacing-lg);
  gap: var(--spacing-md);
  position: relative;
}

.sidePanel {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
  align-self: stretch;
  width: 280px;
  transition: opacity 0.3s ease;
}

.boardContainer:hover .sidePanel {
  opacity: 0.7;
}

.boardContainer:hover .sidePanel:hover {
  opacity: 1;
}

.board {
  background: var(--surface-secondary);
  border: 1px solid var(--border-color);
  box-shadow: var(--shadow);
  padding: var(--spacing-md);
  border-radius: var(--radius-lg);
  max-width: 550px;
  width: 100%;
  transition: all 0.3s ease;
  display: flex;
  justify-content: center;
  align-items: center;
  touch-action: none !important;
  z-index: 1;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
}

.board::before, .board::after {
  content: '';
  position: absolute;
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.board:hover::before, .board:hover::after {
  opacity: 0.7;
}

.welcome {
  margin: var(--spacing-lg) 0;
  padding: var(--spacing-lg);
  background: var(--surface-secondary);
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow);
  position: relative;
  border-left: 4px solid var(--primary-color);
}

.status {
  min-height: 80px;
  margin: var(--spacing-md) 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background: var(--surface-secondary);
  border-radius: var(--radius-lg);
  padding: var(--spacing-md);
  font-weight: 500;
  letter-spacing: 0.5px;
  transition: all 0.3s ease;
}

.status:empty {
  padding: 0;
  background: transparent;
}

/* Motives Section */
.motives {
  background: var(--surface-secondary);
  backdrop-filter: var(--blur-intensity);
  border-radius: var(--radius-lg);
  padding: var(--spacing-md);
  margin: 0;
  border-left: 4px solid var(--primary-color);
  box-shadow: var(--shadow);
  transition: var(--transition-all);
  position: relative;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  font-size: 1.1rem;
}

.motives strong {
  font-weight: 700;
  color: var(--primary-color);
  margin-right: 8px;
  display: inline-block;
  position: relative;
}

.motives strong::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, var(--primary-color), transparent);
}

.motiveText {
  flex: 1;
  margin-right: 30px;
  font-weight: 500;
  line-height: 1.6;
  color: var(--text-secondary);
  font-size: 2rem;
}

.motiveIcon {
  position: absolute;
  right: var(--spacing-sm);
  top: 50%;
  transform: translateY(-50%);
  color: var(--primary-color);
  opacity: 0.2;
  transition: var(--transition-all);
  width: 20px;
  height: 20px;
}

.motives:hover .motiveIcon {
  color: var(--primary-color);
  opacity: 0.4;
  transform: translateY(-50%) scale(1.1);
}

.startingColor {
  background: var(--surface-secondary);
  backdrop-filter: var(--blur-intensity);
  border-radius: var(--radius-lg);
  padding: var(--spacing-md);
  margin: 0;
  border-left: 4px solid var(--primary-color);
  text-align: left;
  box-shadow: var(--shadow);
  transition: var(--transition-all);
  position: relative;
  overflow: hidden;
  display: flex;
  align-items: flex-start;
  flex-wrap: wrap;
  font-size: 0.9rem;
}

.startingColor strong {
  font-weight: 700;
  color: var(--primary-color);
  margin-right: 8px;
  display: inline-block;
  position: relative;
}

.startingColor strong::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, var(--primary-color), transparent);
}

.colorText {
  flex: 1;
  margin-right: 30px;
  font-weight: 600;
  line-height: 1.6;
  color: var(--text-secondary);
}

.colorIcon {
  position: absolute;
  right: var(--spacing-sm);
  top: 50%;
  transform: translateY(-50%);
  color: var(--primary-color);
  opacity: 0.2;
  transition: var(--transition-all);
  width: 20px;
  height: 20px;
}

.startingColor:hover .colorIcon {
  color: var(--primary-color);
  opacity: 0.4;
  transform: translateY(-50%) scale(1.1);
}

.motives:hover, .startingColor:hover {
  transform: translateY(-2px);
  box-shadow: 0 12px 32px var(--shadow-color);
}

/* Enhanced success feedback */
.success {
  color: var(--success-color);
  padding: var(--spacing-md);
  border-radius: var(--radius-md);
  background-color: rgba(47, 133, 90, 0.1);
  border: 1px solid rgba(47, 133, 90, 0.2);
  animation: successPulse 2s ease;
  margin: var(--spacing-md) 0;
  position: relative;
  overflow: hidden;
}

@keyframes successPulse {
  0% { background-color: rgba(47, 133, 90, 0.1); }
  30% { background-color: rgba(47, 133, 90, 0.25); }
  100% { background-color: rgba(47, 133, 90, 0.1); }
}

.success::after {
  content: '♔';
  position: absolute;
  right: 15px;
  top: 50%;
  transform: translateY(-50%);
  font-size: 1.5rem;
  opacity: 0.2;
}

.failure {
  color: var(--failure-color);
  padding: var(--spacing-md);
  border-radius: var(--radius-md);
  background-color: rgba(229, 62, 62, 0.1);
  border: 1px solid rgba(229, 62, 62, 0.2);
  animation: fadeIn 0.5s ease;
  margin: var(--spacing-md) 0;
  position: relative;
}

.failure::after {
  content: '♗';
  position: absolute;
  right: 15px;
  top: 50%;
  transform: translateY(-50%) rotate(45deg);
  font-size: 1.5rem;
  opacity: 0.2;
}

/* Enhanced buttons with chess theme */
button {
  background-image: var(--primary-gradient);
  border: none;
  color: white;
  padding: 14px 28px;
  border-radius: var(--radius-md);
  font-weight: 600;
  font-size: 1rem;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  margin: var(--spacing-sm);
  box-shadow: 0 4px 12px var(--shadow-color);
  cursor: pointer;
}

button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(255, 255, 255, 0.1);
  opacity: 0;
  transition: opacity 0.3s ease;
}

button:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 24px var(--shadow-color);
}

button:hover::before {
  opacity: 1;
}

/* Focus indicator for keyboard navigation */
button:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(113, 96, 232, 0.3), 0 8px 24px var(--shadow-color);
}

.errorMessage {
  background: var(--secondary-gradient);
  color: white;
  padding: var(--spacing-md);
  border-radius: var(--radius-md);
  animation: shake 0.5s cubic-bezier(.36,.07,.19,.97) both;
  box-shadow: 0 4px 12px var(--shadow-color);
  font-weight: 500;
}

.errorMessage.animate {
  animation: shake 0.5s ease-in-out;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes shake {
  0% { transform: translateX(0); }
  20% { transform: translateX(-10px); }
  40% { transform: translateX(10px); }
  60% { transform: translateX(-10px); }
  80% { transform: translateX(10px); }
  100% { transform: translateX(0); }
}

.reviewInfo{
  color: var(--text-primary);
  font-size: 1.2em;
}

.controls {
  flex-direction: column;
  margin: var(--spacing-md) 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Enhanced solution controls */
.solutionControls {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 8px;
  padding: 8px;
  border-radius: var(--radius-md);
  /* background: linear-gradient(to right, var(--primary-color), rgb(31, 31, 244)); */
  background-image: var(--primary-gradient);
  box-shadow: 2px 2px 5px rgba(0,0,0,0.3);
  border: 1px solid var(--border-color);
  box-shadow: var(--shadow);
  width: 100%;
  box-sizing: border-box;
  border-left: 4px solid var(--text-primary);
  border-right: 4px solid var(--text-primary);
}

/* Compact button style for sidebar panel */
.moveButton {
  flex: 1;
  padding: 6px 12px;
  font-size: 0.85rem;
  font-weight: 600;
  border-radius: var(--radius-sm);
  background: var(--surface-primary);
  border: 1px solid var(--border-color);
  color: var(--text-primary);
  cursor: pointer;
  transition: background 0.2s ease, transform 0.2s ease;
  white-space: nowrap;
}

.moveButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.moveButton:not(:disabled):hover {
  background: var(--surface-tertiary);
  transform: translateY(-1px);
}

/* No unnecessary animations or underline */
.moveButton::after {
  display: none;
}

/* Compact and centered indicator */
.moveIndicator {
  font-size: 0.75rem;
  font-weight: 500;
  padding: 4px 8px;
  background: var(--surface-tertiary);
  border-radius: var(--radius-sm);
  border: 1px solid var(--border-color);
  color: var(--text-primary);
  white-space: nowrap;
}


/* Specific styles for previous and next buttons */
.showSolutionButton {
  background-color: #6c757d;
  background-image: linear-gradient(135deg, #8a94a0, #6c757d);
  color: white;
}

.showSolutionButton:hover {
  background-color: #5a6268;
}

.nextPuzzleButton {
  background-color: var(--primary-color);
  color: white;
  border: none;
}

.nextPuzzleButton:hover {
  background-color: var(--primary-hover);
}


/* Chess piece icon in button */
/* .nextPuzzleButton::before {
  content: '♞';
  position: absolute;
  left: 15px;
  font-size: 1.2rem;
  opacity: 0;
  transform: translateX(-10px);
  transition: all 0.3s ease;
} */

.nextPuzzleButton:hover::before {
  opacity: 1;
  transform: translateX(0);
}

.progress {
  margin: var(--spacing-lg) 0;
  padding: 0 var(--spacing-md);
}

.progressBar {
  width: 100%;
  height: 10px;
  background-color: var(--surface-tertiary);
  border-radius: 5px;
  margin: var(--spacing-md) 0;
  overflow: hidden;
  position: relative;
}

.progressFill {
  height: 100%;
  background: var(--primary-gradient);
  border-radius: 5px;
  transition: width 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
}

/* Pulsing effect at the progress edge */
.progressFill::after {
  content: '';
  position: absolute;
  right: 0;
  top: 0;
  height: 100%;
  width: 10px;
  background: rgba(255, 255, 255, 0.3);
  animation: pulseBrightness 1.5s infinite;
}

@keyframes pulseBrightness {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 0.8; }
}

.progressText {
  text-align: center;
  font-size: 1.1rem;
  font-weight: 500;
  color: var(--text-secondary);
  margin-top: var(--spacing-sm);
}

.progressDetails {
  font-size: 0.9rem;
  margin-left: 0.5rem;
  color: var(--text-tertiary);
  font-weight: 400;
}

.sessionComplete {
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: var(--blur-intensity);
  border: 1px solid var(--glass-border);
  padding: var(--spacing-xl);
  border-radius: var(--border-radius);
  margin: var(--spacing-lg) 0;
  box-shadow: var(--glass-shadow);
  animation: fadeIn 0.8s ease;
  position: relative;
  overflow: hidden;
}

/* Chess board pattern background on session complete */
.sessionComplete::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url("data:image/svg+xml,%3Csvg width='40' height='40' viewBox='0 0 40 40' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 0h20v20H0V0zm20 20h20v20H20V20z' fill='%234c51bf' fill-opacity='0.03'/%3E%3C/svg%3E");
  z-index: -1;
}

.sessionComplete h1 {
  color: #4c51bf;
  font-size: 2.5rem;
  margin-bottom: var(--spacing-lg);
  position: relative;
  display: inline-block;
}

.sessionComplete h1::after {
  content: '';
  position: absolute;
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
  width: 80px;
  height: 3px;
  background: linear-gradient(90deg, transparent, #4c51bf, transparent);
}

.sessionComplete p {
  font-size: 1.2rem;
  margin: var(--spacing-md) 0;
  color: #4a5568;
}

.sessionComplete p:last-child {
  margin-top: var(--spacing-lg);
  font-weight: 600;
  font-size: 1.4rem;
  background: linear-gradient(135deg, #4c51bf, #6366f1);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
}

.customDarkSquareStyle {
  background-color: #779952;
}

.customLightSquareStyle {
  background-color: #edeed1;
}

.puzzleInfo {
  flex: 1;
  min-width: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Enhanced timer container */
.timerContainer {
  padding: var(--spacing-md);
  background: var(--surface-secondary);
  border-radius: var(--radius-lg);
  text-align: center;
  border: 1px solid var(--border-color);
  margin-bottom: var(--spacing-md);
  box-shadow: var(--shadow);
  position: relative;
  transition: all 0.3s ease;
}

.timerContainer:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);
}

.timer {
  font-size: 2.5rem;
  font-weight: 700;
  color: var(--text-primary);
  margin: var(--spacing-sm) 0;
  font-variant-numeric: tabular-nums;
  font-feature-settings: "tnum";
  letter-spacing: -1px;
}

.timerLabel {
  font-size: 1rem;
  color: var(--text-secondary);
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 1px;
  margin-bottom: var(--spacing-sm);
}

.puzzleDetails {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

/* Chess piece dragging styles to override react-chessboard defaults */
:global(.piece-417db) {
  cursor: grab !important;
  z-index: 5;
  touch-action: none !important;
  pointer-events: auto !important;
  will-change: transform;
  position: relative !important;
  transition: transform 0.1s ease !important;
}

:global(.piece-417db:active) {
  cursor: grabbing !important;
  z-index: 9999 !important;
  transform: scale(1.05) !important;
}

/* Additional square styling */
:global(.square-55d63) {
  touch-action: none !important;
  -webkit-tap-highlight-color: transparent !important;
  transition: all 0.15s ease !important;
}

/* Highlight the possible moves with pulsing effect */
:global(.highlight-square) {
  box-shadow: inset 0 0 0 3px rgba(255, 255, 0, 0.7) !important;
  animation: highlightPulse 1.5s infinite !important;
}

@keyframes highlightPulse {
  0%, 100% { box-shadow: inset 0 0 0 3px rgba(255, 255, 0, 0.5) !important; }
  50% { box-shadow: inset 0 0 0 3px rgba(255, 255, 0, 0.8) !important; }
}

/* Highlight the selected piece */
:global(.selected-piece) {
  background-color: rgba(102, 126, 234, 0.4) !important;
  box-shadow: inset 0 0 0 2px rgba(102, 126, 234, 0.8) !important;
}

/* Touch-specific overrides for mobile devices */
@media (pointer: coarse) {
  :global(.piece-417db) {
    transform: none !important;
    transition: none !important;
  }

  :global(.chess-board-wrapper) {
    touch-action: none !important;
  }

  :global(.board-b72b1) {
    touch-action: none !important;
  }
}

@media (max-width: 768px) {
  :root {
    --spacing-sm: 0.5rem;
    --spacing-md: 1rem;
    --spacing-lg: 1.5rem;
    --spacing-xl: 2.5rem;
  }

  .PuzzleSolver {
    width: 95%;
    padding: var(--spacing-md);
    margin: var(--spacing-md) auto;
    border-radius: 16px;
  }

  .header {
    padding: var(--spacing-md);
    margin: -var(--spacing-md) -var(--spacing-md) var(--spacing-md) -var(--spacing-md);
    flex-direction: row;
    align-items: center;
    flex-wrap: nowrap;
    overflow: visible;
  }

  .welcome h1 {
    font-size: 1.8rem;
  }

  .welcome p {
    font-size: 1rem;
  }

  .header h2 {
    font-size: 1.2rem;
    margin: 0;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .boardContainer {
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-sm);
  }

  .sidePanel {
    width: 100%;
    max-width: 550px;
    order: -1; /* Place timer above the board on mobile */
    margin-bottom: var(--spacing-sm);
  }

  .board {
    max-width: 100%;
    padding: var(--spacing-sm);
    touch-action: none !important;
  }

  .controls {
    flex-direction: column;
  }

  .solutionControls {
    width: 100%;
    justify-content: space-between;
  }

  .moveButton {
    padding: 8px 12px;
    font-size: 0.8rem;
  }

  button {
    width: 100%;
    padding: var(--spacing-md);
    margin: var(--spacing-sm) 0;
  }

  .showSolutionButton, .nextPuzzleButton {
    min-width: unset;
  }

  .sessionComplete {
    padding: var(--spacing-lg);
  }

  .sessionComplete h1 {
    font-size: 1.8rem;
  }

  .sessionComplete p {
    font-size: 1rem;
  }

  .errorMessage {
    max-width: 95%;
  }

  .puzzleInfo {
    width: auto;
    text-align: left;
    flex: 1;
    padding-right: var(--spacing-sm);
    min-width: 0;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .timerContainer {
    width: auto;
    flex-shrink: 0;
    margin-left: var(--spacing-sm);
    margin-top: 0;
  }

  .puzzleDetails {
    gap: var(--spacing-sm);
    margin: 0;
    width: 100%;
  }

  .motives, .startingColor {
    padding: var(--spacing-md);
  }

  .motiveIcon, .colorIcon {
    right: var(--spacing-sm);
    width: 20px;
    height: 20px;
  }

  .motiveText, .colorText {
    margin-right: 24px;
  }

  /* Increase tap target size on mobile */
  :global(.square-55d63) {
    min-height: 40px !important;
    min-width: 40px !important;
    touch-action: none !important;
  }

  /* Make pieces easier to grab on mobile */
  :global(.piece-417db) {
    min-height: 40px !important;
    min-width: 40px !important;
  }

  .solutionTimer {
    padding: var(--spacing-sm);
    flex-direction: column;
    gap: 8px;
    align-items: flex-start;
  }

  .solutionTimer span {
    align-self: center;
  }
}

.solutionTimer {
  text-align: center;
  font-size: 1.1rem;
  padding: var(--spacing-md);
  background: var(--surface-secondary);
  border-radius: var(--radius-lg);
  margin-bottom: var(--spacing-md);
  font-weight: 500;
  border: 1px solid var(--border-color);
  box-shadow: var(--shadow);
  display: flex;
  flex-direction: column;
  align-items: center;
  color: var(--text-primary);
  position: relative;
  overflow: hidden;
  border-left: 4px solid var(--primary-color);
}

/* Subtle chess notation background for timer */
.solutionTimer::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url("data:image/svg+xml,%3Csvg width='100' height='20' xmlns='http://www.w3.org/2000/svg'%3E%3Ctext x='10' y='15' font-family='monospace' font-size='12' opacity='0.07'%3Ee4 e5 Nf3 Nc6%3C/text%3E%3C/svg%3E");
  background-repeat: repeat;
  opacity: 0.1;
  z-index: 0;
}

.solutionTimer strong {
  margin-bottom: 4px;
  color: var(--text-secondary);
  position: relative;
  z-index: 1;
}

.solutionTimer span {
  font-size: 2rem;
  font-weight: 700;
  color: var(--primary-color);
  font-variant-numeric: tabular-nums;
  letter-spacing: -1px;
  position: relative;
  z-index: 1;
}

/* Focus mode - temporarily hide non-essential UI when user is making a move */
.focusMode .sidePanel,
.focusMode .status:not(:empty),
.focusMode .controls:not(.active) {
  opacity: 0.3;
  transition: opacity 0.5s ease;
}

.focusMode .board {
  transform: scale(1.02);
  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15), 0 0 0 2px var(--primary-color, #7160e8);
}

.chance {
  display: inline-block;
  padding: 12px 24px;
  border-radius: 2rem;
  background: #fff5e1;
  font-weight: bold;
  font-size: 2rem;
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
  background-image: linear-gradient(to right, #FFA500, #FF4500);
}

.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw; 
  height: 100vh; 
  background-color: rgba(0, 0, 0, 1); 
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 10; 
}

.modalContent {
  background: var(--surface-primary);
  padding: 2rem;
  border-radius: 12px;
  max-width: 90%; 
  text-align: center;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
}


.statusMessage{
  display: flex;
  justify-content: center;
  align-items: center;
  /* padding-right: 2.5rem; */
  font-size: 2rem;
}


.timer {
  color: var(--text-primary);
  margin-left: 0.5em;
  font-size: 1.5rem;
}

.motiveButtons{
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(3,auto);
  gap: 1rem 1rem;
  justify-items: auto;
}
